{"version":3,"sources":["components/DataTable/TableHead.js","components/DataTable/helpers.js","components/DataTable/TableRow.js","components/DataTable/index.js","Demo.js","index.js"],"names":["TableHead","props","columns","isSelectAll","isSticky","onSelectionChange","TableHeadWrapper","TableHeadColumn","className","type","checked","onChange","e","target","map","column","style","width","flex","key","id","numeric","label","debounce","func","timeFrame","timeout","context","this","args","arguments","clearTimeout","setTimeout","apply","TableRow","config","onClick","row","selected","data-row-id","_","height","rowHeight","top","rowStartIndex","stopPropagation","keys","index","DataTable","state","computedRows","rows","slice","visibleRows","isLoading","page","tableRef","React","createRef","tableBodyRef","onLoadMore","tableEle","current","tableBodyEle","addEventListener","tableScrollTop","scrollTop","tableOffsetHeight","clientHeight","tableBodyScrollHeight","scrollHeight","_handleRowVisibility","bind","setState","_loadMore","prevProps","JSON","stringify","scrollOffset","currentVisibleRowIndex","Math","floor","prevRowIndex","nextRowIndex","mutatedComputedRows","forEach","push","searchTerm","onSearch","nextPage","then","nextRows","prevState","computedRow","find","isSelected","mutatedRows","filter","_recomputeRows","onRowClick","stickyHeader","length","rowConfig","tableHeadCommonProps","_selectAllHandler","tableHeight","data-is-loading","_onSearch","value","placeholder","ref","cellPadding","cellSpacing","_rowSelectionChangeHandler","Component","Demo","errorToast","_rowLoader","loadRows","catch","err","console","error","finally","thumbnail","src","thumbnailUrl","alt","title","url","pageNumber","fetch","res","json","generateRows","window","open","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bfe33ceb.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TableHead = props => {\n  const { columns, isSelectAll, isSticky, onSelectionChange } = props;\n\n  const TableHeadWrapperTr = \"tr\";\n  const TableHeadWrapperTh = \"th\";\n  const TableHeadDiv = \"div\";\n  const TableHeadWrapper = isSticky ? TableHeadDiv : TableHeadWrapperTr;\n  const TableHeadColumn = isSticky ? TableHeadDiv : TableHeadWrapperTh;\n\n  return (\n    <TableHeadWrapper\n      className={`table-head ${isSticky ? \"table-head-sticky\" : \"\"}`}\n    >\n      <TableHeadColumn className=\"table-head-column\">\n        <input\n          type=\"checkbox\"\n          className=\"checkbox\"\n          checked={!!isSelectAll}\n          onChange={e => {\n            onSelectionChange && onSelectionChange(e.target.checked);\n          }}\n        />\n      </TableHeadColumn>\n\n      {columns.map(column => {\n        const style = {};\n        if (column.width) {\n          style.width = column.width;\n        } else {\n          style.flex = \"1\";\n        }\n\n        return (\n          <TableHeadColumn\n            key={column.id}\n            className={`table-head-column ${\n              column.numeric ? \"table-head-column_is-numeric\" : \"\"\n            }`}\n            style={style}\n          >\n            {column.label}\n          </TableHeadColumn>\n        );\n      })}\n    </TableHeadWrapper>\n  );\n};\n\nTableHead.propTypes = {\n  columns: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n        .isRequired,\n      numeric: PropTypes.bool,\n      width: PropTypes.string,\n    })\n  ).isRequired,\n  isSelectAll: PropTypes.bool,\n  isSticky: PropTypes.bool.isRequired,\n  onSelectionChange: PropTypes.func,\n};\n\nexport default TableHead;\n","import React from \"react\";\n\n/**\n * TableRows data validator\n * @param {!Object<?any>} propValue\n * @param {string} propName\n * @param {string} componentName\n */\nfunction TableRowPropValidator(propValue, propName, componentName) {\n  if (propValue[propName] instanceof Object === false) {\n    throw new TypeError(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    );\n  }\n\n  const propKeys = Object.keys(propValue[propName]);\n  if (!propKeys.includes(\"id\")) {\n    throw new TypeError(\n      `Missing prop \\`${propName}[id]\\` supplied to \\`${componentName}\\`. Validation failed.`\n    );\n  }\n\n  propKeys.forEach(key => {\n    if (key === \"id\" && typeof propValue[propName][key] !== \"string\") {\n      throw new TypeError(\n        `Invalid prop \\`${propName}[${key}]\\` supplied to \\`${componentName}\\`. Validation failed.`\n      );\n    } else if (\n      key === \"selected\" &&\n      typeof propValue[propName][key] !== \"boolean\"\n    ) {\n      throw new TypeError(\n        `Invalid prop \\`${propName}[${key}]\\` supplied to \\`${componentName}\\`. Validation failed.`\n      );\n    } else if (\n      !(\n        typeof propValue[propName][key] === \"string\" ||\n        !isNaN(Number(propValue[propName][key])) ||\n        React.isValidElement(propValue[propName][key])\n      )\n    ) {\n      throw new TypeError(\n        `Invalid prop \\`${propName}[${key}]\\` supplied to \\`${componentName}\\`. Validation failed.`\n      );\n    }\n  });\n}\n\n/**\n * Ensures that the prop is a a natural number.\n * @param {!Object<?any>} props\n * @param {string} propName\n * @param {string} componentName\n */\nfunction GreaterThanZeroPropValidator(props, propName, componentName) {\n  if (\n    Number(props[propName]) !== props[propName] ||\n    props[propName] % 1 !== 0 ||\n    props[propName] === 0\n  ) {\n    throw new Error(\n      \"Invalid prop `\" +\n        propName +\n        \"` supplied to\" +\n        \" `\" +\n        componentName +\n        \"`. Validation failed.\"\n    );\n  }\n}\n\n/**\n * Debounce event\n * @param {Function} func\n * @param {number} timeFrame\n * @returns {Function}\n */\nfunction debounce(func, timeFrame) {\n  var timeout;\n  return function() {\n    var context = this,\n      args = arguments;\n    clearTimeout(timeout);\n    timeout = setTimeout(function() {\n      timeout = null;\n      func.apply(context, args);\n    }, timeFrame);\n  };\n}\n\nexport { GreaterThanZeroPropValidator, TableRowPropValidator, debounce };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { TableRowPropValidator } from \"components/DataTable/helpers\";\n\nconst TableRow = props => {\n  const { config, onClick, onSelectionChange, row } = props;\n  const { id, selected, ...columns } = row;\n\n  return (\n    <tr\n      className=\"table-row\"\n      data-row-id={id}\n      onClick={_ => onClick && onClick()}\n      style={{\n        height: `${config.rowHeight}px`,\n        top: `${config.rowStartIndex}px`,\n      }}\n    >\n      <td className=\"table-row-item\">\n        <input\n          type=\"checkbox\"\n          className=\"checkbox\"\n          checked={!!selected}\n          onClick={e => {\n            e.stopPropagation();\n          }}\n          onChange={e => {\n            onSelectionChange && onSelectionChange(e.target.checked);\n          }}\n        />\n      </td>\n\n      {config.keys.map((column, index) => {\n        const style = {};\n        if (config.width[index]) {\n          style.width = config.width[index];\n        } else {\n          style.flex = \"1\";\n        }\n\n        return (\n          <td\n            key={`TableRow_${column}_${id}`}\n            style={style}\n            className={`table-row-item ${\n              config.numeric[index] ? \"table-row-item_is-numeric\" : \"\"\n            }`}\n          >\n            {columns[column]}\n          </td>\n        );\n      })}\n    </tr>\n  );\n};\n\nTableRow.propTypes = {\n  config: PropTypes.exact({\n    keys: PropTypes.arrayOf(PropTypes.string).isRequired,\n    width: PropTypes.arrayOf(PropTypes.string).isRequired,\n    numeric: PropTypes.arrayOf(PropTypes.bool).isRequired,\n    rowHeight: PropTypes.number.isRequired,\n    rowStartIndex: PropTypes.number.isRequired,\n  }).isRequired,\n  onClick: PropTypes.func,\n  onSelectionChange: PropTypes.func,\n  row: TableRowPropValidator,\n};\n\nexport default TableRow;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport TableHead from \"components/DataTable/TableHead\";\nimport TableRow from \"components/DataTable/TableRow\";\nimport {\n  GreaterThanZeroPropValidator,\n  TableRowPropValidator,\n  debounce,\n} from \"components/DataTable/helpers\";\n\nclass DataTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      computedRows: props.rows.slice(0, props.visibleRows * 2),\n      isLoading: false,\n      rows: props.rows,\n      rowStartIndex: 0,\n      page: 0,\n      visibleRows: props.visibleRows,\n    };\n\n    this.tableRef = React.createRef();\n    this.tableBodyRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { onLoadMore } = this.props;\n    if (onLoadMore) {\n      const tableEle = this.tableRef.current;\n      const tableBodyEle = this.tableBodyRef.current;\n      tableEle.addEventListener(\"scroll\", e => {\n        // Compute client height on scroll for dynamic height\n        const tableScrollTop = tableEle.scrollTop;\n        const tableOffsetHeight = tableEle.clientHeight;\n        const tableBodyScrollHeight = tableBodyEle.scrollHeight;\n\n        debounce(this._handleRowVisibility.bind(this), 10)(tableScrollTop);\n\n        if (!this.state.isLoading) {\n          if (tableBodyScrollHeight - tableOffsetHeight <= tableScrollTop) {\n            this.setState({ isLoading: true }, () => {\n              this._loadMore();\n            });\n          }\n        }\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { rows, visibleRows } = this.props;\n\n    if (JSON.stringify(rows) !== JSON.stringify(prevProps.rows)) {\n      this.setState({\n        computedRows: rows.slice(0, visibleRows * 2),\n        isLoading: false,\n        rows: rows,\n        rowStartIndex: 0,\n        page: 0,\n      });\n    }\n  }\n\n  /**\n   * Handles row virtualization logic\n   * @param {number} scrollOffset\n   * @private\n   */\n  _handleRowVisibility(scrollOffset) {\n    const { rowHeight } = this.props;\n    const { rows, visibleRows } = this.state;\n\n    const currentVisibleRowIndex = Math.floor(scrollOffset / rowHeight);\n    const prevRowIndex = currentVisibleRowIndex - visibleRows * 2;\n    const nextRowIndex = currentVisibleRowIndex + visibleRows * 4;\n    const rowStartIndex = prevRowIndex > 0 ? prevRowIndex : 0;\n\n    const mutatedComputedRows = [];\n    rows\n      .slice(rowStartIndex, currentVisibleRowIndex)\n      .forEach(row => mutatedComputedRows.push(row));\n    rows\n      .slice(currentVisibleRowIndex, nextRowIndex)\n      .forEach(row => mutatedComputedRows.push(row));\n\n    this.setState({\n      computedRows: mutatedComputedRows,\n      rowStartIndex: rowStartIndex,\n    });\n  }\n\n  /**\n   * Handles search\n   * @param {?string} searchTerm\n   * @private\n   */\n  _onSearch(searchTerm = \"\") {\n    const { onSearch } = this.props;\n    debounce(onSearch, 1000)(searchTerm);\n  }\n\n  /**\n   * Handles loadMore for infinite scroll\n   * @private\n   */\n  _loadMore() {\n    const { onLoadMore } = this.props;\n    const { page } = this.state;\n\n    const nextPage = page + 1;\n    onLoadMore(nextPage).then(nextRows => {\n      this.setState(prevState => ({\n        isLoading: false,\n        page: nextPage,\n        rows: [...prevState.rows, ...nextRows],\n      }));\n    });\n  }\n\n  /**\n   * Recomputes the row for any updates\n   * @private\n   */\n  _recomputeRows() {\n    const { rows, computedRows } = this.state;\n\n    const mutatedComputedRows = computedRows.map(computedRow => {\n      return rows.find(row => row.id === computedRow.id);\n    });\n\n    this.setState({ computedRows: mutatedComputedRows });\n  }\n\n  /**\n   * Handles row selection change event.\n   * @param {number} index\n   * @param {boolean} isSelected\n   * @private\n   */\n  _rowSelectionChangeHandler(index, isSelected) {\n    const { onSelectionChange } = this.props;\n    this.setState(\n      prevState => {\n        const mutatedRows = [...prevState.rows];\n        mutatedRows[index].selected = isSelected;\n\n        // Trigger selectionChange\n        onSelectionChange &&\n          onSelectionChange(\n            mutatedRows.filter(row => !!row.selected).map(row => row.id)\n          );\n\n        return {\n          rows: mutatedRows,\n        };\n      },\n      () => {\n        this._recomputeRows();\n      }\n    );\n  }\n\n  /**\n   * Handles row selection change event.\n   * @param {boolean} isSelected\n   * @private\n   */\n  _selectAllHandler(isSelected) {\n    const { onSelectionChange } = this.props;\n    this.setState(\n      prevState => {\n        const mutatedRows = [...prevState.rows].map(row => ({\n          ...row,\n          selected: isSelected,\n        }));\n\n        // Trigger selectionChange\n        onSelectionChange &&\n          onSelectionChange(\n            (isSelected ? prevState.rows : []).map(row => row.id)\n          );\n\n        return {\n          rows: mutatedRows,\n        };\n      },\n      () => {\n        this._recomputeRows();\n      }\n    );\n  }\n\n  render() {\n    const {\n      className,\n      columns,\n      config,\n      onRowClick,\n      onSearch,\n      rowHeight,\n      visibleRows,\n    } = this.props;\n    const { computedRows, isLoading, rows, rowStartIndex } = this.state;\n\n    const isSticky = !!config.stickyHeader;\n    const isSelectAll =\n      rows.length > 0 &&\n      rows.filter(row => !!row.selected).length === rows.length;\n    const rowConfig = {\n      keys: [],\n      numeric: [],\n      rowHeight: rowHeight,\n      width: [],\n    };\n    columns.forEach(column => {\n      rowConfig.keys.push(column.id);\n      rowConfig.numeric.push(column.numeric);\n      rowConfig.width.push(column.width);\n    });\n\n    const tableHeadCommonProps = {\n      columns: columns,\n      isSelectAll: isSelectAll,\n      onSelectionChange: this._selectAllHandler.bind(this),\n    };\n\n    let tableHeight = visibleRows * rowHeight;\n    if (rows.length === 0) {\n      tableHeight = 50;\n    }\n\n    return (\n      <div\n        className={`data-table ${className || \"\"}`}\n        data-is-loading={isLoading}\n      >\n        {onSearch && (\n          <div className=\"data-table-search\">\n            <input\n              type=\"search\"\n              onChange={e => this._onSearch(e.target.value)}\n              placeholder=\"Search\"\n            />\n          </div>\n        )}\n        <div className=\"data-table-wrapper\">\n          {isLoading && <div className=\"data-table-loader\" />}\n          {isSticky && <TableHead {...tableHeadCommonProps} isSticky={true} />}\n\n          <table\n            ref={this.tableRef}\n            cellPadding=\"0\"\n            cellSpacing=\"0\"\n            style={{\n              height: `${tableHeight}px`,\n            }}\n          >\n            {!isSticky && (\n              <thead>\n                <TableHead {...tableHeadCommonProps} isSticky={false} />\n              </thead>\n            )}\n            <tbody\n              ref={this.tableBodyRef}\n              className=\"data-table-body\"\n              style={{ height: `${rows.length * rowHeight}px` }}\n            >\n              {rows.length === 0 && (\n                <tr className=\"table-row empty-rows\">\n                  <td className=\"table-row-item\">No Data</td>\n                </tr>\n              )}\n              {rows.length > 0 &&\n                computedRows.map((row, index) => (\n                  <TableRow\n                    key={`DataTable_TableRow_${row.id}`}\n                    config={{\n                      ...rowConfig,\n                      rowStartIndex: (rowStartIndex + index) * rowHeight,\n                    }}\n                    row={row}\n                    onClick={column => onRowClick(row, rowStartIndex + index)}\n                    onSelectionChange={isSelected =>\n                      this._rowSelectionChangeHandler(\n                        rowStartIndex + index,\n                        isSelected\n                      )\n                    }\n                  />\n                ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nDataTable.propTypes = {\n  className: PropTypes.string,\n  config: PropTypes.shape({\n    stickyHeader: PropTypes.bool,\n  }).isRequired,\n  columns: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n        .isRequired,\n      numeric: PropTypes.bool,\n      width: PropTypes.string,\n    })\n  ).isRequired,\n  onLoadMore: PropTypes.func,\n  onRowClick: PropTypes.func,\n  onSearch: PropTypes.func,\n  onSelectionChange: PropTypes.func,\n  rows: PropTypes.arrayOf(TableRowPropValidator).isRequired,\n  rowHeight: GreaterThanZeroPropValidator,\n  visibleRows: GreaterThanZeroPropValidator,\n};\n\nexport default DataTable;\nexport { TableRow };\n","import React from \"react\";\nimport DataTable from \"components/DataTable/index\";\nimport \"static/css/app.scss\";\nimport \"static/css/datatable.scss\";\n\nexport default class Demo extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: true,\n      errorToast: false,\n      searchTerm: \"\",\n      rows: [],\n    };\n  }\n\n  componentDidMount() {\n    this._rowLoader();\n  }\n\n  /**\n   * Loads row\n   * @private\n   */\n  _rowLoader() {\n    this.loadRows(0)\n      .then(rows => {\n        this.setState({ rows: rows });\n      })\n      .catch(err => {\n        this.setState(\n          {\n            errorToast: \"Something went wrong. Check console for more info.\",\n          },\n          () => {\n            setTimeout(() => {\n              this.setState({\n                errorToast: false,\n              });\n            }, 2500);\n          }\n        );\n        console.error(err);\n      })\n      .finally(_ => this.setState({ isLoading: false }));\n  }\n\n  /**\n   * Loads data from endpoint\n   * @param {!Array<?>} rows\n   */\n  generateRows(rows) {\n    return rows.map(row => ({\n      id: `album_${row.id}`,\n      thumbnail: (\n        <img\n          className=\"demo-thumbnail\"\n          src={row.thumbnailUrl}\n          alt={row.title}\n        />\n      ),\n      title: <span className=\"demo-title\">{row.title}</span>,\n      url: row.url,\n    }));\n  }\n\n  /**\n   * Loads data from endpoint\n   * @param {number} pageNumber\n   */\n  loadRows(pageNumber) {\n    const { searchTerm } = this.state;\n    return fetch(\n      `https://jsonplaceholder.typicode.com/photos?_page=${pageNumber +\n        1}&q=${searchTerm}`\n    )\n      .then(res => res.json())\n      .then(this.generateRows.bind(this));\n  }\n\n  render() {\n    const { isLoading, rows } = this.state;\n    return (\n      <div className=\"demo\">\n        <div className=\"loader\" data-is-loading={isLoading} />\n        <h1 className=\"header\">Photo Album</h1>\n\n        <DataTable\n          onLoadMore={this.loadRows.bind(this)}\n          onRowClick={row => {\n            window.open(row.url, \"_blank\");\n            console.log(row);\n          }}\n          onSelectionChange={console.log}\n          onSearch={searchTerm =>\n            this.setState({ searchTerm }, this._rowLoader)\n          }\n          config={{ stickyHeader: true }}\n          columns={[\n            {\n              id: \"thumbnail\",\n              label: \"Thumbnail\",\n              numeric: false,\n              width: \"250px\",\n            },\n            {\n              id: \"title\",\n              label: \"Title\",\n              numeric: false,\n            },\n          ]}\n          rows={rows}\n          rowHeight={200}\n          visibleRows={3}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Demo from \"Demo\";\n\nReactDOM.render(<Demo />, document.getElementById(\"root\"));\n"],"sourceRoot":""}