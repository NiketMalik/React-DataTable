{"version":3,"sources":["components/DataTable/TableHead.js","components/DataTable/TableRow.js","components/DataTable/index.js","Demo.js","index.js"],"names":["TableHead","props","columns","isSelectAll","isSticky","onSelectionChange","TableHeadWrapper","TableHeadColumn","className","type","checked","onChange","e","target","map","column","style","width","flex","key","id","numeric","label","TableRow","config","onClick","row","selected","data-row-id","_","height","rowHeight","top","rowStartIndex","stopPropagation","keys","index","DataTable","state","computedRows","rows","slice","visibleRows","isLoading","page","tableRef","React","createRef","tableBodyRef","this","onLoadMore","tableEle","current","tableBodyEle","addEventListener","tableScrollTop","scrollTop","tableOffsetHeight","clientHeight","tableBodyScrollHeight","scrollHeight","_throttle","_handleRowVisibility","bind","setState","_loadMore","callback","limit","wait","apply","arguments","setTimeout","scrollOffset","currentVisibleRowIndex","Math","floor","prevRowIndex","nextRowIndex","mutatedComputedRows","forEach","push","nextPage","then","nextRows","prevState","computedRow","find","isSelected","mutatedRows","filter","_recomputeRows","onRowClick","stickyHeader","length","rowConfig","tableHeadCommonProps","_selectAllHandler","data-is-loading","ref","cellPadding","cellSpacing","_rowSelectionChangeHandler","Component","generateRows","pageNumber","i","description","product","price","loadRows","Promise","resolve","ReactDOM","render","console","log","document","getElementById"],"mappings":"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","file":"static/js/main.86fb2238.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TableHead = props => {\n  const { columns, isSelectAll, isSticky, onSelectionChange } = props;\n\n  const TableHeadWrapperTr = \"tr\";\n  const TableHeadWrapperTh = \"th\";\n  const TableHeadDiv = \"div\";\n  const TableHeadWrapper = isSticky ? TableHeadDiv : TableHeadWrapperTr;\n  const TableHeadColumn = isSticky ? TableHeadDiv : TableHeadWrapperTh;\n\n  return (\n    <TableHeadWrapper\n      className={`table-head ${isSticky ? \"table-head-sticky\" : \"\"}`}\n    >\n      <TableHeadColumn className=\"table-head-column\">\n        <input\n          type=\"checkbox\"\n          className=\"checkbox\"\n          checked={!!isSelectAll}\n          onChange={e => {\n            onSelectionChange && onSelectionChange(e.target.checked);\n          }}\n        />\n      </TableHeadColumn>\n\n      {columns.map(column => {\n        const style = {};\n        if (column.width) {\n          style.width = column.width;\n        } else {\n          style.flex = \"1\";\n        }\n\n        return (\n          <TableHeadColumn\n            key={column.id}\n            className={`table-head-column ${\n              column.numeric ? \"table-head-column_is-numeric\" : \"\"\n            }`}\n            style={style}\n          >\n            {column.label}\n          </TableHeadColumn>\n        );\n      })}\n    </TableHeadWrapper>\n  );\n};\n\nTableHead.propTypes = {\n  columns: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n        .isRequired,\n      numeric: PropTypes.bool,\n      width: PropTypes.string,\n    })\n  ).isRequired,\n  isSelectAll: PropTypes.bool,\n  isSticky: PropTypes.bool.isRequired,\n  onSelectionChange: PropTypes.func,\n};\n\nexport default TableHead;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { TableRowPropValidator } from \"components/DataTable/helpers\";\n\nconst TableRow = props => {\n  const { config, onClick, onSelectionChange, row } = props;\n  const { id, selected, ...columns } = row;\n\n  return (\n    <tr\n      className=\"table-row\"\n      data-row-id={id}\n      onClick={_ => onClick && onClick()}\n      style={{\n        height: `${config.rowHeight}px`,\n        top: `${config.rowStartIndex}px`,\n      }}\n    >\n      <td className=\"table-row-item\">\n        <input\n          type=\"checkbox\"\n          className=\"checkbox\"\n          checked={!!selected}\n          onClick={e => {\n            e.stopPropagation();\n          }}\n          onChange={e => {\n            onSelectionChange && onSelectionChange(e.target.checked);\n          }}\n        />\n      </td>\n\n      {config.keys.map((column, index) => {\n        const style = {};\n        if (config.width[index]) {\n          style.width = config.width[index];\n        } else {\n          style.flex = \"1\";\n        }\n\n        return (\n          <td\n            key={`TableRow_${column}_${id}`}\n            style={style}\n            className={`table-row-item ${\n              config.numeric[index] ? \"table-row-item_is-numeric\" : \"\"\n            }`}\n          >\n            {columns[column]}\n          </td>\n        );\n      })}\n    </tr>\n  );\n};\n\nTableRow.propTypes = {\n  config: PropTypes.exact({\n    keys: PropTypes.arrayOf(PropTypes.string).isRequired,\n    width: PropTypes.arrayOf(PropTypes.string).isRequired,\n    numeric: PropTypes.arrayOf(PropTypes.bool).isRequired,\n    rowHeight: PropTypes.number.isRequired,\n    rowStartIndex: PropTypes.number.isRequired,\n  }).isRequired,\n  onClick: PropTypes.func,\n  onSelectionChange: PropTypes.func,\n  row: TableRowPropValidator,\n};\n\nexport default TableRow;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport TableHead from \"components/DataTable/TableHead\";\nimport TableRow from \"components/DataTable/TableRow\";\nimport {\n  GreaterThanZeroPropValidator,\n  TableRowPropValidator,\n} from \"components/DataTable/helpers\";\n\nclass DataTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      computedRows: props.rows.slice(0, props.visibleRows * 2),\n      isLoading: false,\n      rows: props.rows,\n      rowStartIndex: 0,\n      page: 0,\n      visibleRows: props.visibleRows,\n    };\n\n    this.tableRef = React.createRef();\n    this.tableBodyRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { onLoadMore } = this.props;\n    if (onLoadMore) {\n      const tableEle = this.tableRef.current;\n      const tableBodyEle = this.tableBodyRef.current;\n      tableEle.addEventListener(\"scroll\", e => {\n        // Compute client height on scroll for dynamic height\n        const tableScrollTop = tableEle.scrollTop;\n        const tableOffsetHeight = tableEle.clientHeight;\n        const tableBodyScrollHeight = tableBodyEle.scrollHeight;\n\n        this._throttle(this._handleRowVisibility.bind(this), 10)(\n          tableScrollTop\n        );\n\n        if (!this.state.isLoading) {\n          if (tableBodyScrollHeight - tableOffsetHeight <= tableScrollTop) {\n            this.setState({ isLoading: true }, () => {\n              this._loadMore();\n            });\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * Throttling event\n   * @param {Function} callback\n   * @param {number} limit\n   * @returns {Function}\n   * @private\n   */\n  _throttle(callback, limit) {\n    let wait = false;\n    return function() {\n      if (!wait) {\n        callback.apply(null, arguments);\n        wait = true;\n        setTimeout(function() {\n          wait = false;\n        }, limit);\n      }\n    };\n  }\n\n  /**\n   * Handles row virtualization logic\n   * @param {number} scrollOffset\n   * @private\n   */\n  _handleRowVisibility(scrollOffset) {\n    const { rowHeight } = this.props;\n    const { rows, visibleRows } = this.state;\n\n    const currentVisibleRowIndex = Math.floor(scrollOffset / rowHeight);\n    const prevRowIndex = currentVisibleRowIndex - visibleRows * 2;\n    const nextRowIndex = currentVisibleRowIndex + visibleRows * 4;\n    const rowStartIndex = prevRowIndex > 0 ? prevRowIndex : 0;\n\n    const mutatedComputedRows = [];\n    rows\n      .slice(rowStartIndex, currentVisibleRowIndex)\n      .forEach(row => mutatedComputedRows.push(row));\n    rows\n      .slice(currentVisibleRowIndex, nextRowIndex)\n      .forEach(row => mutatedComputedRows.push(row));\n\n    this.setState({\n      computedRows: mutatedComputedRows,\n      rowStartIndex: rowStartIndex,\n    });\n  }\n\n  /**\n   * Handles loadMore for infinite scroll\n   * @private\n   */\n  _loadMore() {\n    const { onLoadMore } = this.props;\n    const { page } = this.state;\n\n    const nextPage = page + 1;\n\n    onLoadMore(nextPage).then(nextRows => {\n      this.setState(prevState => ({\n        isLoading: false,\n        page: nextPage,\n        rows: [...prevState.rows, ...nextRows],\n      }));\n    });\n  }\n\n  /**\n   * Recomputes the row for any updates\n   * @private\n   */\n  _recomputeRows() {\n    const { rows, computedRows } = this.state;\n\n    const mutatedComputedRows = computedRows.map(computedRow => {\n      return rows.find(row => row.id === computedRow.id);\n    });\n\n    this.setState({ computedRows: mutatedComputedRows });\n  }\n\n  /**\n   * Handles row selection change event.\n   * @param {number} index\n   * @param {boolean} isSelected\n   * @private\n   */\n  _rowSelectionChangeHandler(index, isSelected) {\n    const { onSelectionChange } = this.props;\n    this.setState(\n      prevState => {\n        const mutatedRows = [...prevState.rows];\n        mutatedRows[index].selected = isSelected;\n\n        // Trigger selectionChange\n        onSelectionChange &&\n          onSelectionChange(\n            mutatedRows.filter(row => !!row.selected).map(row => row.id)\n          );\n\n        return {\n          rows: mutatedRows,\n        };\n      },\n      () => {\n        this._recomputeRows();\n      }\n    );\n  }\n\n  /**\n   * Handles row selection change event.\n   * @param {boolean} isSelected\n   * @private\n   */\n  _selectAllHandler(isSelected) {\n    const { onSelectionChange } = this.props;\n    this.setState(\n      prevState => {\n        const mutatedRows = [...prevState.rows].map(row => ({\n          ...row,\n          selected: isSelected,\n        }));\n\n        // Trigger selectionChange\n        onSelectionChange &&\n          onSelectionChange(\n            (isSelected ? prevState.rows : []).map(row => row.id)\n          );\n\n        return {\n          rows: mutatedRows,\n        };\n      },\n      () => {\n        this._recomputeRows();\n      }\n    );\n  }\n\n  render() {\n    const {\n      className,\n      columns,\n      config,\n      onRowClick,\n      rowHeight,\n      visibleRows,\n    } = this.props;\n    const { computedRows, isLoading, rows, rowStartIndex } = this.state;\n\n    const isSticky = !!config.stickyHeader;\n    const isSelectAll =\n      rows.filter(row => !!row.selected).length === rows.length;\n    const rowConfig = {\n      keys: [],\n      numeric: [],\n      rowHeight: rowHeight,\n      width: [],\n    };\n    columns.forEach(column => {\n      rowConfig.keys.push(column.id);\n      rowConfig.numeric.push(column.numeric);\n      rowConfig.width.push(column.width);\n    });\n\n    const tableHeadCommonProps = {\n      columns: columns,\n      isSelectAll: isSelectAll,\n      onSelectionChange: this._selectAllHandler.bind(this),\n    };\n\n    return (\n      <div\n        className={`data-table ${className || \"\"}`}\n        data-is-loading={isLoading}\n      >\n        {isLoading && <div className=\"loader\" />}\n        {isSticky && <TableHead {...tableHeadCommonProps} isSticky={true} />}\n\n        <table\n          ref={this.tableRef}\n          cellPadding=\"0\"\n          cellSpacing=\"0\"\n          style={{ height: `${visibleRows * rowHeight}px` }}\n        >\n          {!isSticky && (\n            <thead>\n              <TableHead {...tableHeadCommonProps} isSticky={false} />\n            </thead>\n          )}\n          <tbody\n            ref={this.tableBodyRef}\n            className=\"data-table-body\"\n            style={{ height: `${rows.length * rowHeight}px` }}\n          >\n            {computedRows.map((row, index) => (\n              <TableRow\n                key={`DataTable_TableRow_${row.id}`}\n                config={{\n                  ...rowConfig,\n                  rowStartIndex: (rowStartIndex + index) * rowHeight,\n                }}\n                row={row}\n                onClick={column => onRowClick(row, rowStartIndex + index)}\n                onSelectionChange={isSelected =>\n                  this._rowSelectionChangeHandler(\n                    rowStartIndex + index,\n                    isSelected\n                  )\n                }\n              />\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nDataTable.propTypes = {\n  className: PropTypes.string,\n  config: PropTypes.shape({\n    stickyHeader: PropTypes.bool,\n  }).isRequired,\n  columns: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n        .isRequired,\n      numeric: PropTypes.bool,\n      width: PropTypes.string,\n    })\n  ).isRequired,\n  onLoadMore: PropTypes.func,\n  onRowClick: PropTypes.func,\n  onSelectionChange: PropTypes.func,\n  rows: PropTypes.arrayOf(TableRowPropValidator).isRequired,\n  rowHeight: GreaterThanZeroPropValidator,\n  visibleRows: GreaterThanZeroPropValidator,\n};\n\nexport default DataTable;\nexport { TableRow };\n","import React from \"react\";\nimport DataTable from \"components/DataTable/index\";\nimport \"static/css/app.scss\";\nimport \"static/css/datatable.scss\";\n\nconst pageSize = 50;\nconst generateRows = (pageNumber = 0) => {\n  const rows = [];\n  for (\n    let i = pageNumber * pageSize;\n    i < pageNumber * pageSize + pageSize;\n    i++\n  ) {\n    rows.push({\n      id: `id_${i}`,\n      description: \"Loreum Ipsum\",\n      product: <span>{`Product ${i + 1}`}</span>,\n      price: 15.2 + i,\n    });\n  }\n  return rows;\n};\n\nconst loadRows = (pageNumber = 0) => {\n  return new Promise(resolve => {\n    setTimeout(() => resolve(generateRows(pageNumber)), 2500);\n  });\n};\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"header\">Data Table</h1>\n      <DataTable\n        onLoadMore={loadRows}\n        onRowClick={console.log}\n        onSelectionChange={console.log}\n        config={{ stickyHeader: true }}\n        columns={[\n          {\n            id: \"product\",\n            label: \"Product\",\n            numeric: false,\n            width: \"160px\",\n          },\n          {\n            id: \"description\",\n            label: \"Description\",\n            numeric: false,\n            width: \"50%\",\n          },\n          {\n            id: \"price\",\n            label: \"Price\",\n            numeric: true,\n          },\n        ]}\n        rows={generateRows(0)}\n        rowHeight={55}\n        visibleRows={10}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Demo from \"Demo\";\n\nReactDOM.render(<Demo />, document.getElementById(\"root\"));\n"],"sourceRoot":""}